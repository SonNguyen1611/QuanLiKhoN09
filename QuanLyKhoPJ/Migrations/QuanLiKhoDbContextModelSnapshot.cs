// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyKhoPJ.Model;

#nullable disable

namespace QuanLyKhoPJ.Migrations
{
    [DbContext(typeof(QuanLiKhoDbContext))]
    partial class QuanLiKhoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyKhoPJ.Model.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.EntryBill", b =>
                {
                    b.Property<int>("EntryBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntryBillId"));

                    b.Property<int>("CountProduct")
                        .HasColumnType("int");

                    b.Property<float>("EntryBillPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EntryBillId");

                    b.HasIndex("UserId");

                    b.ToTable("EntryBill");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.EntryBillProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntryBillId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QuantityAddLast")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntryBillId");

                    b.HasIndex("ProductId");

                    b.ToTable("EntryBillProduct");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.ExportBill", b =>
                {
                    b.Property<int>("ExportBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExportBillId"));

                    b.Property<int>("CountProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("ExportBillPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExportBillId");

                    b.HasIndex("UserId");

                    b.ToTable("ExportBill");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.ExportBillProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExportBillId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QuantityOutLast")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExportBillId");

                    b.HasIndex("ProductId");

                    b.ToTable("ExportBillProduct");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CateId")
                        .HasColumnType("int");

                    b.Property<decimal>("EnTryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExportPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityAddInBill")
                        .HasColumnType("int");

                    b.Property<int?>("SuplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CateId");

                    b.HasIndex("SuplierId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.Suplier", b =>
                {
                    b.Property<int>("SuplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuplierId"));

                    b.Property<string>("SuplierAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuplierEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuplierPhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("SuplierId");

                    b.ToTable("Suplier");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.EntryBill", b =>
                {
                    b.HasOne("QuanLyKhoPJ.Model.User", "User")
                        .WithMany("EntryBills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.EntryBillProduct", b =>
                {
                    b.HasOne("QuanLyKhoPJ.Model.EntryBill", "EntryBill")
                        .WithMany("EntryBillProducts")
                        .HasForeignKey("EntryBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKhoPJ.Model.Product", "Product")
                        .WithMany("EntryBillProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntryBill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.ExportBill", b =>
                {
                    b.HasOne("QuanLyKhoPJ.Model.User", "User")
                        .WithMany("ExportBills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.ExportBillProduct", b =>
                {
                    b.HasOne("QuanLyKhoPJ.Model.ExportBill", "ExportBill")
                        .WithMany("ExportBillProducts")
                        .HasForeignKey("ExportBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKhoPJ.Model.Product", "Product")
                        .WithMany("ExportBillProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExportBill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.Product", b =>
                {
                    b.HasOne("QuanLyKhoPJ.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CateId");

                    b.HasOne("QuanLyKhoPJ.Model.Suplier", "Suplier")
                        .WithMany("Products")
                        .HasForeignKey("SuplierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");

                    b.Navigation("Suplier");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.User", b =>
                {
                    b.HasOne("QuanLyKhoPJ.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.EntryBill", b =>
                {
                    b.Navigation("EntryBillProducts");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.ExportBill", b =>
                {
                    b.Navigation("ExportBillProducts");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.Product", b =>
                {
                    b.Navigation("EntryBillProducts");

                    b.Navigation("ExportBillProducts");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.Suplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QuanLyKhoPJ.Model.User", b =>
                {
                    b.Navigation("EntryBills");

                    b.Navigation("ExportBills");
                });
#pragma warning restore 612, 618
        }
    }
}
